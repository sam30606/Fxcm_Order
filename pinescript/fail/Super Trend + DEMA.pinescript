// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© sam30606

//@version=5
// # ========================================================================= #
// #                   |   STRATEGY  |
// # ========================================================================= #
strategy("Super Trend + DEMA", shorttitle="Super Trend + DEMA", overlay=true)

// # ========================================================================= #
// #                   |   STRATEGY  |
// # ========================================================================= #

// # ========================================================================= #
// #                   |   Double EMA  |
// # ========================================================================= #


demaLength = input.int(200, minval=1, group="DEMA Settings")
demaSrc = input(close, title="Source", group="DEMA Settings")
e1 = ta.ema(demaSrc, demaLength)
e2 = ta.ema(e1, demaLength)
dema = 2 * e1 - e2
//plot(dema, "DEMA", color=#43A047)

// # ========================================================================= #
// #                   |   Double EMA  |
// # ========================================================================= #

// # ========================================================================= #
// #                   |   Supertrend  |
// # ========================================================================= #



atrPeriod = input(10, "ATR Length", group="Supertrend Settings")
factor = input.float(3.0, "Factor", step = 0.01, group="Supertrend Settings")

[supertrend, direction] = ta.supertrend(factor, atrPeriod)

bodyMiddle = plot((open + close) / 2, display=display.none)
upTrend = plot(direction < 0 ? supertrend : na, "Up Trend", color = color.green, style=plot.style_linebr)
downTrend = plot(direction < 0? na : supertrend, "Down Trend", color = color.red, style=plot.style_linebr)

//fill(bodyMiddle, upTrend, color.new(color.green, 90), fillgaps=false)
//fill(bodyMiddle, downTrend, color.new(color.red, 90), fillgaps=false)

// # ========================================================================= #
// #                   |   Supertrend  |
// # ========================================================================= #

// # ========================================================================= #
// #                   |   Fibonacci Bollinger Bands  |
// # ========================================================================= #


fbbLength = input.int(200, minval=1, group="FBB Setting")
fbbSrc = input(hlc3, title="Source", group="FBB Setting")
mult = input.float(3.0, minval=0.001, maxval=50, group="FBB Setting")
basis = ta.vwma(fbbSrc, fbbLength)
dev = mult * ta.stdev(fbbSrc, fbbLength)
//upper_1= basis + (0.236*dev)
//upper_2= basis + (0.382*dev)
//upper_3= basis + (0.5*dev)
//upper_4= basis + (0.618*dev)
//upper_5= basis + (0.764*dev)
upper_6= basis + (1*dev)
//lower_1= basis - (0.236*dev)
//lower_2= basis - (0.382*dev)
//lower_3= basis - (0.5*dev)
//lower_4= basis - (0.618*dev)
//lower_5= basis - (0.764*dev)
lower_6= basis - (1*dev)
//plot(basis, color=fuchsia, linewidth=2)
//p1 = plot(upper_1, color=white, linewidth=1, title="0.236")
//p2 = plot(upper_2, color=white, linewidth=1, title="0.382")
//p3 = plot(upper_3, color=white, linewidth=1, title="0.5")
//p4 = plot(upper_4, color=white, linewidth=1, title="0.618")
//p5 = plot(upper_5, color=white, linewidth=1, title="0.764")
//p6 = plot(upper_6, color=red, linewidth=2, title="1")
//p13 = plot(lower_1, color=white, linewidth=1, title="0.236")
//p14 = plot(lower_2, color=white, linewidth=1, title="0.382")
//p15 = plot(lower_3, color=white, linewidth=1, title="0.5")
//p16 = plot(lower_4, color=white, linewidth=1, title="0.618")
//p17 = plot(lower_5, color=white, linewidth=1, title="0.764")
//p18 = plot(lower_6, color=green, linewidth=2, title="1")

// # ========================================================================= #
// #                   |   Fibonacci Bollinger Bands  |
// # ========================================================================= #


var float entryPrice=0.0

var float buyProfit=0.0
var float buyStopValue=0.0
var float buyPrice_stop=0.0

var float sellProfit=0.0
var float sellStopValue=0.0
var float sellPrice_stop=0.0

fromYear = input.int(defval=2022, title='From Year', minval=2020, group="Back Test Settings")
fromMomth = input.int(defval=8, title='From Month', minval=1, maxval=12, group="Back Test Settings")
fromDay = input.int(defval=1, title='From Day', minval=1, maxval=31, group="Back Test Settings")
toYear = input.int(defval=2300, title='To Year', minval=2020, group="Back Test Settings")
toMomth = input.int(defval=1, title='To Month', minval=1, maxval=12, group="Back Test Settings")
toDay = input.int(defval=1, title='To Day', minval=1, maxval=31, group="Back Test Settings")

timeStart = timestamp(fromYear, fromMomth, fromDay, 00, 00)
timeFinish = timestamp(toYear, toMomth, toDay, 23, 59)
window()=>time>=timeStart and time <= timeFinish ? true : false

stop_loss_and_tp = input(title='Enable Stop Loss and Take Profit', defval=true, group="Trace Stop Settings")
trail_stop = input(title='Enable Trail Stop', defval=true, group="Trace Stop Settings")
buy_stop_loss = input.float(0, title='buy_stop_loss %', step = 0.1, group="Trace Stop Settings")/100
sell_stop_loss = input.float(0, title='sell_stop_loss %', step = 0.1, group="Trace Stop Settings")/100
buy_tp = input.float(1, title='buy_tp %', step = 0.1, group="Trace Stop Settings")/100
sell_tp = input.float(1, title='sell_tp %', step = 0.1, group="Trace Stop Settings")/100
trailTrig_long = input.float(0.01, title='trailTrig_long %', step = 0.1, group="Trace Stop Settings")/100
trailTrig_short = input.float(0.01, title='trailTrig_short %', step = 0.1, group="Trace Stop Settings")/100
trail_stop_long = input.float(0.005, title='trail_stop_long %', step = 0.1, group="Trace Stop Settings")/100
trail_stop_short = input.float(0.005, title='trail_stop_short %', step = 0.1, group="Trace Stop Settings")/100

// you can set your own logic here

buyDEMA = low >= dema
sellDEMA = high <= dema
buyTrend = trend == 1 ? true : na
sellTrend = trend == 1 ? na : true



buyCondition = buyDEMA and buySignal
sellCondition = sellDEMA and sellSignal



if strategy.position_size != 0
    entryPrice := strategy.opentrades.entry_price(strategy.opentrades - 1)
    buyProfit
    buyStopValue := close * (1-trailperc)
    buyPrice_stop := math.max(buyStopValue,price_stop[1])
    else
    price_stop := 0


if(window())
    if (buyCondition)

        strategy.close('Sell', alert_message = "buy")
        strategy.entry('Buy', strategy.long, alert_message = "buy")
        //strategy.exit('Close Buy', 'Buy', limit=stop_loss_and_tp ? entryPrice * (1 + buy_tp) : na, stop=stop_loss_and_tp ? entryPrice * (1 - buy_stop_loss) : na, trail_price=trail_stop ? entryPrice * (1+trail_stop_long) : na, trail_offset=trail_stop ? entryPrice * (1+trail_stop_long) * trail_stop_long_offset / syminfo.mintick : na, comment_trailing='close trailing', alert_message = "close")
    if (sellCondition)

        strategy.close('Buy', alert_message = "sell")
        strategy.entry('Sell', strategy.short, alert_message = "sell")
        //strategy.exit('Close Sell', 'Sell', limit=stop_loss_and_tp ? entryPrice * (1 - sell_tp) : na, stop=stop_loss_and_tp ? entryPrice * (1 + sell_stop_loss) : na, trail_price=trail_stop ? entryPrice * (1-trail_stop_short) : na, trail_offset=trail_stop ? entryPrice * (1-trail_stop_short) * trail_stop_short_offset / syminfo.mintick: na, comment_trailing='close trailing', alert_message = "close")


    if (strategy.position_size != 0)
        strategy.exit("buyStoploss", "Buy", limit=upper_6, alert_message="close")
        strategy.exit("sellStoploss", "Sell",limit=lower_6, alert_message="close")

net_profit = strategy.netprofit + strategy.openprofit

plot(net_profit, title='Net Profit', linewidth=2, style=plot.style_area, color=net_profit >= 0 ? #26A69A : color.new(color =color.red  , transp = 50))

// # ========================================================================= #
// #                   |   Print  |
// # ========================================================================= #


plotchar(entryPrice, "entryPrice", "", location = location.top)
plotchar(entryPrice * (1 + buy_tp), "buy_tp", "", location = location.top)
plotchar(entryPrice * (1 - buy_stop_loss), "buy_stop_loss", "", location = location.top)
plotchar(entryPrice * (1+trail_stop_long), "buy_trail_price", "", location = location.top)


plotchar(entryPrice, "entryPrice", "", location = location.top)
plotchar(entryPrice * (1 + sell_tp), "sell_tp", "", location = location.top)
plotchar(entryPrice * (1 - sell_stop_loss), "sell_stop_loss", "", location = location.top)
plotchar(entryPrice * (1+trail_stop_short), "sell_trail_price", "", location = location.top)


plotchar(buyCondition, "buyCondition", "", location = location.top)
plotchar(sellCondition, "sellCondition", "", location = location.top)
