// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© sam30606

//@version=5
// # ========================================================================= #
// #                   |   STRATEGY  |
// # ========================================================================= #
strategy("3SuperTrend", shorttitle="3SuperTrend", overlay=true)

// # ========================================================================= #
// #                   |   STRATEGY  |
// # ========================================================================= #

// # ========================================================================= #
// #                   |   Supertrend  |
// # ========================================================================= #

atrPeriod_1 = input(12, "ATR Length", group="Supertrend Settings-1")
factor_1 = input.float(3.0, "Factor", step = 0.01, group="Supertrend Settings-1")

atrPeriod_2 = input(10, "ATR Length", group="Supertrend Settings-2")
factor_2 = input.float(1, "Factor", step = 0.01, group="Supertrend Settings-2")

atrPeriod_3 = input(11, "ATR Length", group="Supertrend Settings-3")
factor_3 = input.float(2, "Factor", step = 0.01, group="Supertrend Settings-3")

[supertrend_1, direction_1] = ta.supertrend(factor_1, atrPeriod_1)
upTrend_1 = direction_1 < 0 ? true : na
downTrend_1 = direction_1 < 0? na : true

[supertrend_2, direction_2] = ta.supertrend(factor_2, atrPeriod_2)
upTrend_2 = direction_2 < 0 ? true : na
downTrend_2 = direction_2 < 0? na : true

[supertrend_3, direction_3] = ta.supertrend(factor_3, atrPeriod_3)
upTrend_3 = direction_3 < 0 ? true : na
downTrend_3 = direction_3 < 0? na : true


// # ========================================================================= #
// #                   |   Supertrend  |
// # ========================================================================= #

// # ========================================================================= #
// #                   |   Moving Average Exponential  |
// # ========================================================================= #

len = input.int(200, minval=1, title="Length", group="EMA Settings")
emaSrc = input(close, title="Source", group="EMA Settings")
offset = input.int(title="Offset", defval=0, minval=-500, maxval=500, group="EMA Settings")
emaOut = ta.ema(emaSrc, len)
//plot(emaOut, title="EMA", color=color.blue, offset=offset)

//ma(source, length, type) =>
//    switch type
//        "SMA" => ta.sma(source, length)
//        "EMA" => ta.ema(source, length)
//        "SMMA (RMA)" => ta.rma(source, length)
//        "WMA" => ta.wma(source, length)
//        "VWMA" => ta.vwma(source, length)

//typeMA = input.string(title = "Method", defval = "SMA", options=["SMA", "EMA", "SMMA (RMA)", "WMA", "VWMA"], group="Smoothing")
//smoothingLength = input.int(title = "Length", defval = 5, minval = 1, maxval = 100, group="Smoothing")

//smoothingLine = ma(emaOut, smoothingLength, typeMA)
//plot(smoothingLine, title="Smoothing Line", color=#f37f20, offset=offset, display=display.none)


// # ========================================================================= #
// #                   |   Moving Average Exponential  |
// # ========================================================================= #






var float entryPrice=0.0

var float buyProfit=0.0
var float buyStopValue=0.0
var float buyPrice_stop=0.0

var float sellProfit=0.0
var float sellStopValue=0.0
var float sellPrice_stop=0.0

fromYear = input.int(defval=2022, title='From Year', minval=2020, group="Back Test Settings")
fromMomth = input.int(defval=8, title='From Month', minval=1, maxval=12, group="Back Test Settings")
fromDay = input.int(defval=1, title='From Day', minval=1, maxval=31, group="Back Test Settings")
toYear = input.int(defval=2300, title='To Year', minval=2020, group="Back Test Settings")
toMomth = input.int(defval=1, title='To Month', minval=1, maxval=12, group="Back Test Settings")
toDay = input.int(defval=1, title='To Day', minval=1, maxval=31, group="Back Test Settings")

timeStart = timestamp(fromYear, fromMomth, fromDay, 00, 00)
timeFinish = timestamp(toYear, toMomth, toDay, 23, 59)
window()=>time>=timeStart and time <= timeFinish ? true : false

stop_loss_and_tp = input(title='Enable Stop Loss and Take Profit', defval=true, group="Trace Stop Settings")
trail_stop = input(title='Enable Trail Stop', defval=true, group="Trace Stop Settings")
buy_stop_loss = input.float(0, title='buy_stop_loss %', step = 0.1, group="Trace Stop Settings")/100
sell_stop_loss = input.float(0, title='sell_stop_loss %', step = 0.1, group="Trace Stop Settings")/100
buy_tp = input.float(1, title='buy_tp %', step = 0.1, group="Trace Stop Settings")/100
sell_tp = input.float(1, title='sell_tp %', step = 0.1, group="Trace Stop Settings")/100
trailTrig_long = input.float(0.01, title='trailTrig_long %', step = 0.1, group="Trace Stop Settings")/100
trailTrig_short = input.float(0.01, title='trailTrig_short %', step = 0.1, group="Trace Stop Settings")/100
trail_stop_long = input.float(0.005, title='trail_stop_long %', step = 0.1, group="Trace Stop Settings")/100
trail_stop_short = input.float(0.005, title='trail_stop_short %', step = 0.1, group="Trace Stop Settings")/100

// you can set your own logic here

buyEMA = close >= emaOut
sellEMA = close < emaOut

buyCondition = upTrend_1 and upTrend_2 and upTrend_3 and buyEMA
sellCondition = downTrend_1 and downTrend_2 and downTrend_3 and sellEMA



if strategy.position_size != 0
    entryPrice := strategy.opentrades.entry_price(strategy.opentrades - 1)
    if ( open >= entryPrice * (1+trailTrig_long) )
        buyProfit := close * (1+trail_stop_long)
        buyStopValue := buyProfit[1]
    else
        buyProfit := entryPrice * (1+trailTrig_long)

    if ( low < entryPrice * (1+trailTrig_long) )
        buyStopValue := entryPrice * (1 - buy_stop_loss)
    else
        buyStopValue := buyStopValue

    buyPrice_stop := buyStopValue


    if ( open <= entryPrice * (1-trailTrig_short) ) //Enable Trig
        sellProfit := close * (1-trail_stop_short)
        sellStopValue := sellProfit[1]
    else
        sellProfit := entryPrice * (1-trailTrig_short)

    if ( high > entryPrice * (1-trailTrig_short) )
        sellStopValue := entryPrice * (1 + sell_stop_loss)

    else
        sellStopValue := sellStopValue

    sellPrice_stop := sellStopValue
else
    
    buyProfit := 0
    buyStopValue := 0
    buyPrice_stop := 0
    sellProfit := 0
    sellStopValue := 0
    sellPrice_stop := 0



if(window())
    if (buyCondition)

        strategy.close('Sell', alert_message = "buy")
        strategy.entry('Buy', strategy.long, alert_message = "buy")
        //strategy.exit('Close Buy', 'Buy', limit=stop_loss_and_tp ? entryPrice * (1 + buy_tp) : na, stop=stop_loss_and_tp ? entryPrice * (1 - buy_stop_loss) : na, trail_price=trail_stop ? entryPrice * (1+trail_stop_long) : na, trail_offset=trail_stop ? entryPrice * (1+trail_stop_long) * trail_stop_long_offset / syminfo.mintick : na, comment_trailing='close trailing', alert_message = "close")
    if (sellCondition)

        strategy.close('Buy', alert_message = "sell")
        strategy.entry('Sell', strategy.short, alert_message = "sell")
        //strategy.exit('Close Sell', 'Sell', limit=stop_loss_and_tp ? entryPrice * (1 - sell_tp) : na, stop=stop_loss_and_tp ? entryPrice * (1 + sell_stop_loss) : na, trail_price=trail_stop ? entryPrice * (1-trail_stop_short) : na, trail_offset=trail_stop ? entryPrice * (1-trail_stop_short) * trail_stop_short_offset / syminfo.mintick: na, comment_trailing='close trailing', alert_message = "close")

    if (strategy.position_size != 0)
        if ( buyCondition == false )
            strategy.close("Buy", alert_message="close")
        if (sellCondition == false)
            strategy.close("Sell", alert_message="close")

net_profit = strategy.netprofit + strategy.openprofit

plot(net_profit, title='Net Profit', linewidth=2, style=plot.style_area, color=net_profit >= 0 ? #26A69A : color.new(color =color.red  , transp = 50))

// # ========================================================================= #
// #                   |   Print  |
// # ========================================================================= #


plotchar(entryPrice, "entryPrice", "", location = location.top)
plotchar(entryPrice * (1 + buy_tp), "buy_tp", "", location = location.top)
plotchar(entryPrice * (1 - buy_stop_loss), "buy_stop_loss", "", location = location.top)
plotchar(entryPrice * (1+trail_stop_long), "buy_trail_price", "", location = location.top)


plotchar(entryPrice, "entryPrice", "", location = location.top)
plotchar(entryPrice * (1 + sell_tp), "sell_tp", "", location = location.top)
plotchar(entryPrice * (1 - sell_stop_loss), "sell_stop_loss", "", location = location.top)
plotchar(entryPrice * (1+trail_stop_short), "sell_trail_price", "", location = location.top)

plotchar(buyCondition, "buyCondition", "", location = location.top)
plotchar(sellCondition, "sellCondition", "", location = location.top)
